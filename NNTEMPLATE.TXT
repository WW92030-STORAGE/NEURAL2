class NNLayer : public Layer {
    public:

    NNLayer() : Layer() {
    }

    NNLayer(int NI, int NO) : Layer(NI, NO) {
    }

    NNLayer(const NNLayer& other) : Layer(other) {
        // do stuff here
    }

    ~NNLayer() {

    }
    
    virtual std::string to_string() {
        return "Layer[]";
    }

    // Forward propagation

    std::vector<NN_NUMERIC_T> forward(std::vector<NN_NUMERIC_T> input) {
        std::vector<NN_NUMERIC_T> output(N_OUTPUTS, 0);

        // do stuff here

        setMR(input, output);
        return output;
        
    }

    // backprop using the most recent forward pass. returns gradients with respect to inputs.
    std::vector<NN_NUMERIC_T> backward(std::vector<NN_NUMERIC_T> gradients) {
        std::vector<NN_NUMERIC_T> vgrads(N_INPUTS, 0);

        // do stuff here

        return vgrads;
    }
};